name: Flutter CI

# Trigger the workflow on push or pull request to the main branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v4  # Update to v4 for consistency

      # Step 2: Set up Java (required for Android builds)
      - name: Setup Java
        uses: actions/setup-java@v4  # Update to v4
        with:
          java-version: '17'

      # Step 3: Set up Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2'  # Updated to a recent stable version (check your appâ€™s compatibility)
          channel: 'stable'
          cache: true  # Enable caching to speed up builds

      # Step 4: Get Flutter dependencies
      - name: Install dependencies
        run: flutter pub get

      # Step 5: Run tests (optional, if you have tests)
      - name: Run Flutter tests
        run: flutter test
        continue-on-error: true  # Allow workflow to proceed even if tests fail (optional)

      # Step 6: Build the APK (for Android)
      - name: Build APK
        run: flutter build apk --release

      # Step 7: Debug APK existence
      - name: Debug APK
        run: ls -la build/app/outputs/flutter-apk/  # Verify the APK exists

      # Step 8: Upload the APK as an artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4  # Updated to v4
        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7  # Set retention period (optional, default is 90 days)